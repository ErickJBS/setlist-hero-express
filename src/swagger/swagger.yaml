openapi: 3.0.1
info:
  title: Setlist-Hero
  version: 1.0.0
  description: >-
    This is the documentation for the API REST used in the backend of the Setlist-Hero App.
externalDocs:
  url: "https://github.com/ErickJBS/setlist-hero-express"
  description: Project Backend Repository
servers:
  - url: "http://localhost:5000/api"
    description: Local development server
  - url: "https://setlist-hero.wl.r.appspot.com"
    description: Production server
tags:
  - name: auth
    description: Operations about authentication
security:
  - BearerToken: []
paths:
  /auth/google:
    get:
      tags:
        - auth
      summary: Logs in an user using google credentials
      description: "Route that redirects to the google oauth 2 log in"
      responses:
        "200":
          description: OK
          headers:
            Set-Cookie:
              schema:
                type: string
                example: jwt=abcde12345; Path=/;
          content:
            text/html:
              schema:
                type: string
  /auth/facebook:
    get:
      tags:
        - auth
      summary: Logs in an user using facebook credentials
      description: "Route that redirects to the facebook oauth 2 log in"
      responses:
        "200":
          description: OK
          headers:
            Set-Cookie:
              schema:
                type: string
                example: jwt=abcde12345; Path=/;
          content:
            text/html:
              schema:
                type: string
  /auth/register:
    post:
      summary: Register a new user
      description: "Receives information about users and register that user if doesn't exists"
      operationId: createUser
      requestBody:
        description: New user data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegister"
        required: true
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        400:
          $ref: "#/components/responses/BadRequest"
        403:
          description: Email already in use
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      tags:
        - auth
  /auth/email:
    post:
      summary: Log in an existing user
      description: "Receives an user identifier (username or email) and a password and logs in the user"
      operationId: login
      requestBody:
        description: Login credentials
        content:
          application/json:
            schema:
              required:
                - email
                - password
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
        required: true
      responses:
        200:
          description: Successful operation
          headers:
            Set-Cookie:
              schema:
                type: string
                example: jwt=abcde12345; Path=/;
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthToken"
        400:
          $ref: "#/components/responses/BadRequest"
        404:
          $ref: "#/components/responses/NotFound"
      tags:
        - auth
components:
  securitySchemes:
    name:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    AuthToken:
      type: object
      properties:
        token:
          type: string
          description: Bearer token
        user:
          $ref: "#/components/schemas/User"
    UserRegister:
      required:
        - email
        - name
        - password
        - username
      type: object
      properties:
        name:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          minLength: 8
          type: string
    UserLogin:
      required:
        - identifier
        - password
      type: object
      properties:
        identifier:
          type: string
        password:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        username:
          type: string
        displayName:
          type: string
        authProvider:
          type: string

    RequestError:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              msg:
                type: string
                description: error description
  responses:
    BadRequest:
      description: Missing or wrong parameters
      content:
        applicatiosn/json:
          schema:
            $ref: "#/components/schemas/RequestError"
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RequestError"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RequestError"
