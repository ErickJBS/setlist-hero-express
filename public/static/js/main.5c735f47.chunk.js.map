{"version":3,"sources":["routing/PrivateRoute.jsx","redux/auth/auth.types.js","redux/auth/auth.reducer.js","redux/band/band.types.js","redux/band/band.reducer.js","redux/musician/musician.types.js","redux/musician/musician.reducer.js","redux/song/song.types.js","redux/song/song.reducer.js","redux/root.reducer.js","redux/store.js","redux/auth/auth.selector.js","redux/auth/auth.actions.js","components/mini-logo.jsx","environments/production.js","environments/base.js","services/AuthService.js","components/register/register-form.jsx","utils/RegisterUtils.js","pages/auth/auth-page.jsx","pages/auth/register-page.jsx","components/login/social-network-button.jsx","components/login/login-form.jsx","pages/auth/login-page.jsx","utils/SetAuthToken.js","components/sidebar/sidebar-logo.jsx","components/sidebar/sidebar-element.jsx","components/sidebar/icons-and-element-names.js","components/sidebar/sidebar.jsx","components/page-title.jsx","components/generic-body-card.jsx","components/manage-bands/genre-items.js","services/BaseService.js","services/BandService.js","redux/band/band.actions.js","redux/band/band.selector.js","components/multiselect-selected.jsx","components/manage-bands/create-band.jsx","components/table-header.jsx","components/manage-bands/manage-bands-body.jsx","pages/manage-bands/bands-overview.jsx","components/manage-bands/band-title.jsx","components/manage-bands/topbar/band-topbar-element.jsx","components/manage-bands/topbar/band-topbar.jsx","redux/musician/musician.selector.js","redux/musician/musician.actions.js","services/MusicianService.js","components/manage-bands/band/instruments-options.js","components/manage-bands/band/add-band-member.jsx","components/manage-bands/band/band-members.jsx","components/manage-bands/band/band-events.jsx","redux/song/song.selector.js","redux/song/song.actions.js","services/SongService.js","components/manage-bands/band/add-song.jsx","components/manage-bands/band/band-songs.jsx","components/manage-bands/song/manage-song-sheets.jsx","components/manage-bands/song/editor-component.jsx","components/manage-bands/song/song-sheets-router.jsx","components/manage-bands/band/band-songs-router.jsx","components/manage-bands/band/edit-band.jsx","pages/manage-bands/view-band.jsx","pages/manage-bands/manage-bands-page.jsx","components/setlists/setlist-body.jsx","pages/setlists/setlists-page.jsx","pages/home-page.jsx","App.js","serviceWorker.js","index.js","assets/only_logo.svg","assets/register_bg.jpg","assets/google_logo.svg","assets/fb_logo.svg","assets/login_bg.jpg","assets/dashboard.svg"],"names":["connect","state","auth","Component","component","user","loading","path","rest","render","props","to","AuthActionTypes","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","REGISTER_SUCCESS","REGISTER_FAILURE","jwt","Cookies","get","JSON","parse","INITIAL_STATE","token","error","authReducer","action","type","payload","BandActionTypes","FETCH_BANDS_SUCCESS","FETCH_BANDS_FAILURE","SELECT_BAND","UPDATE_SELECTED_BAND","bands","selectedBand","bandReducer","MusicianActionTypes","FETCH_MUSICIANS_SUCCESS","FETCH_MUSICIANS_FAILURE","musicians","musicianReducer","SongActionsTypes","FETCH_SONGS","SELECT_SONG","songs","song","songReducer","rootReducer","combineReducers","musician","persistReducer","key","storage","blacklist","band","store","createStore","devToolsEnhancer","persistor","persistStore","selectUser","createSelector","logout","MiniLogo","className","src","logo","alt","style","height","width","env","host","api","isProduction","isDevelopment","environment","baseUrl","social","requestUrl","axios","response","fetchedUrl","request","responseURL","console","log","data","post","headers","status","Error","withCredentials","message","errors","msg","mapStateToProps","createStructuredSelector","dispatch","registerUser","registerSuccess","useState","password","setPassword","name","setName","username","setUsername","email","setEmail","passwordFeedback","setPasswordFeedback","validPassword","setValidPassword","confirmPassword","setConfirmPassword","passwordConfirmed","setPasswordConfifmed","confirmPasswordFeedback","setConfirmPasswordFeedback","isRegistered","setIsRegistered","useEffect","test","onSubmit","e","preventDefault","displayName","authService","register","then","value","alert","catch","required","id","placeholder","onChange","target","aria-describedby","paddingLeft","image","children","backgroundImage","backgroundRepeat","backgroundAttachment","backgroundSize","Card","padding","RegisterPage","SocialNetworkButton","text","btnClass","onClick","window","location","href","marginRight","loginFailure","identifier","setIdentifier","errorFeedback","setErrorFeedback","login","gLogo","fLogo","LoginPage","setAuthToken","defaults","common","SidebarLogo","marginTop","SidebarElement","history","useHistory","selected","useLocation","pathname","match","push","dashboard","icon","profile","setlist","withRouter","renderSidebarElements","Object","keys","iconsAndNames","map","element","index","margin","backgroundColor","remove","PageTitle","title","paddingTop","paddingBottom","GenericBodyCard","genreItems","label","BaseService","resource","this","resourceUrl","obj","query","put","delete","fetchBandsSuccess","fetchBandsFailure","selectBand","selectBands","bandState","selectSelectedBand","fetchBands","callback","genres","setGenres","undefined","imageUrl","setImageUrl","bandName","setBandName","bandDescription","setBandDescription","growl","useRef","bandCreated","ref","position","description","manager","bandService","create","result","newBands","concat","genre","join","current","show","severity","summary","detail","htmlFor","multiple","url","onUpload","xhr","downloadUrl","accept","maxFileSize","Left","rows","minWidth","maxSelectedLabels","optionLabel","optionValue","options","selectedItemTemplate","Button","variant","TableHeader","isDialogDisplaying","setIsDialogDisplaying","setGlobalFilter","buttonText","active","onInput","globalFilter","selectedColumn","Modal","size","onHide","dialogClassName","aria-labelledby","onExiting","Header","closeButton","Title","Body","header","setGlobalFilte","scrollable","scrollHeight","sortField","selectionMode","sortOrder","selection","onSelectionChange","field","sortable","BandsOverview","generateGenreTags","split","Fragment","Badge","BandTopBarElement","useParams","toLowerCase","renderTopBandElements","elementName","BandTopBar","selectMusicians","musiciansState","fetchMusiciansSuccess","fetchMusicians","selectedInstrument","setSelectedInstrument","memberAdded","memberError","instrument","musicianService","setTimeout","life","getById","newMusician","class","fetchFailure","fetchMusiciansFailure","isConfirmDialogDisplaying","setIsConfirmDialogDisplaying","isUpdateDialogDisplaying","setIsUpdateDialogDisplaying","musicianToBeModified","setMusicianToBeModified","memberModified","getAll","results","newMusicians","renderDeleteModal","centered","Footer","filter","renderUpdateModal","update","toUpperCase","slice","resizableColumns","body","rowData","headerStyle","textAlign","bodyStyle","overflow","selectSelectedSong","songsState","selectSongs","fetchSongs","tempo","setTempo","tags","setTags","songMessage","songMessageFailed","songService","newSong","separator","selectSong","songToBeDeleted","setSongToBeDeleted","songModified","CustomHeader","lyricsCallback","sheetsCallback","lyrics","sheets","root","content","sheet","songSheetsFormated","expander","editorState","setEditorState","onTextChange","htmlValue","SongSheetsRouter","EditorComponent","ManageSongSheets","BandSongsRouter","BandSongs","reducer","updateSelectedBand","updateBands","trim","isBandActive","setIsBandActive","bandUpdated","bandUpdateError","useReducer","actionState","handleButtonClick","renderModal","updatedBand","defaultValue","BandMembers","BandEvents","EditBand","from","ViewBand","SetlistsBody","searchBar","aria-label","HomePage","ManageBandsPage","SetlistsPage","componentToTest","App","jwtCookie","exact","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.5c735f47.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { user, loading },\r\n  path,\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    path={path}\r\n    render={\r\n      props => (!user && !loading ? (\r\n          <Redirect to='/login' />\r\n        ) : (\r\n            <Component {...props} {...rest} />\r\n        )\r\n      )\r\n    }    \r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","const AuthActionTypes = {\r\n    LOGIN_START: 'LOGIN_START',\r\n    LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n    LOGIN_FAILURE: 'LOGIN_FAILURE',\r\n    LOGOUT: 'LOGOUT',\r\n    REGISTER_SUCCESS: 'REGISTER_SUCCESS',\r\n    REGISTER_FAILURE: 'REGISTER_FAILURE'\r\n}\r\n\r\nexport default AuthActionTypes;","import AuthActionTypes from './auth.types';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst jwt = (Cookies.get('jwt')) ? JSON.parse((Cookies.get('jwt'))) : {};\r\n\r\nconst INITIAL_STATE = {\r\n    user: jwt !== {} ? {\r\n        token : jwt.token,\r\n        ...jwt.user\r\n    } : {} ,\r\n    error: {}\r\n};\r\n\r\nconst authReducer = (state = INITIAL_STATE, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case AuthActionTypes.LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload,\r\n            };\r\n        case AuthActionTypes.LOGIN_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: payload\r\n            };\r\n        case AuthActionTypes.LOGOUT:\r\n            return {\r\n                ...state,\r\n                user: {},\r\n                error: {}\r\n            };\r\n        case AuthActionTypes.REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            };\r\n        case AuthActionTypes.REGISTER_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","const BandActionTypes = {\r\n    FETCH_BANDS_SUCCESS: 'FETCH_BANDS_SUCCESS',\r\n    FETCH_BANDS_FAILURE: 'FETCH_BANDS_FAILURE',\r\n    SELECT_BAND: 'SELECT_BAND',\r\n    UPDATE_SELECTED_BAND: 'UPDATE_SELECTED_BAND'\r\n}\r\n\r\nexport default BandActionTypes;","import BandActionTypes from './band.types';\r\n\r\nconst { FETCH_BANDS_SUCCESS, FETCH_BANDS_FAILURE, SELECT_BAND, UPDATE_SELECTED_BAND } = BandActionTypes;\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    bands: [],\r\n    selectedBand: null,\r\n    error: {}\r\n}\r\n\r\nconst bandReducer = (state = INITIAL_STATE, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case FETCH_BANDS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                bands: payload\r\n            }\r\n        case FETCH_BANDS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: payload\r\n            }\r\n        case SELECT_BAND:\r\n            return {\r\n                ...state,\r\n                selectedBand: payload\r\n            }\r\n        case UPDATE_SELECTED_BAND:\r\n            return {\r\n                ...state,\r\n                selectedBand: payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default bandReducer;","const MusicianActionTypes = {\r\n    FETCH_MUSICIANS_SUCCESS: 'FETCH_MUSICIANS_SUCCESS',\r\n    FETCH_MUSICIANS_FAILURE: 'FETCH_MUSICIANS_FAILURE'\r\n}\r\n\r\nexport default MusicianActionTypes;","import MusicianActionTypes from './musician.types';\r\n\r\nconst {FETCH_MUSICIANS_FAILURE, FETCH_MUSICIANS_SUCCESS} = MusicianActionTypes;\r\n\r\nconst INITIAL_STATE = {\r\n    musicians: [],\r\n    error: {}\r\n}\r\n\r\nconst musicianReducer = (state = INITIAL_STATE, action) => {\r\n    const {type, payload} = action;\r\n    switch(type){\r\n        case FETCH_MUSICIANS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                musicians: payload\r\n            }\r\n        case FETCH_MUSICIANS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error:payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default musicianReducer;","const SongActionsTypes = {\r\n    FETCH_SONGS : 'FETCH_SONGS',\r\n    SELECT_SONG : 'SELECT_SONG'\r\n};\r\n\r\nexport default SongActionsTypes;","import SongActionsTypes from './song.types';\r\n\r\nconst {FETCH_SONGS, SELECT_SONG} = SongActionsTypes;\r\n\r\nconst INITIAL_STATE = {\r\n    songs: [],\r\n    song: {}\r\n}\r\n\r\nconst songReducer = (state = INITIAL_STATE, action) => {\r\n    const {type,payload} = action;\r\n    switch(type){\r\n        case FETCH_SONGS:\r\n            return {\r\n                ...state,\r\n                songs: payload\r\n            }\r\n        case SELECT_SONG:\r\n            return {\r\n                ...state,\r\n                song: payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default songReducer;","import { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport authReducer from './auth/auth.reducer';\r\nimport bandReducer from './band/band.reducer';\r\nimport musicianReducer from './musician/musician.reducer';\r\nimport songReducer from './song/song.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    musician: musicianReducer,\r\n    song: persistReducer({\r\n        key: 'song',\r\n        storage: storage,\r\n        blacklist: ['songs']\r\n    }, songReducer),\r\n    band: persistReducer({\r\n        key: 'band',\r\n        storage: storage,\r\n        blacklist: ['bands']\r\n    }, bandReducer)\r\n    \r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from './root.reducer';\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\nimport { devToolsEnhancer } from 'redux-devtools-extension';\r\n\r\nconst initialState = {};\r\n\r\n\r\nconst rootPersistConfig = {\r\n    key: 'root',\r\n    storage: storage,\r\n    whitelist: ['band']\r\n}\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    devToolsEnhancer()\r\n);\r\n\r\nexport const persistor = persistStore(store);\r\n","import { createSelector } from 'reselect';\r\n\r\nexport const selectAuth = state => state.auth;\r\n\r\nexport const selectUser = createSelector(\r\n    [selectAuth],\r\n    auth => auth.user\r\n);","import AuthActionTypes from './auth.types';\r\n\r\nexport const loginStart = crendentials => ({\r\n    type: AuthActionTypes.LOGIN_START,\r\n    payload: crendentials\r\n});\r\n\r\nexport const loginSuccess = (user) => ({\r\n    type: AuthActionTypes.LOGIN_SUCCESS,\r\n    payload: user\r\n});\r\n\r\nexport const loginFailure = (error) => ({\r\n    type: AuthActionTypes.LOGIN_FAILURE,\r\n    payload: error\r\n});\r\n\r\nexport const logout = () => ({\r\n    type: AuthActionTypes.LOGOUT\r\n});\r\n\r\nexport const registerSuccess = (user) => ({\r\n    type: AuthActionTypes.REGISTER_SUCCESS,\r\n    payload: user\r\n});\r\n\r\nexport const registerFailure = (error) => ({\r\n    type: AuthActionTypes.REGISTER_FAILURE,\r\n    payload: error\r\n});","import React from 'react';\r\nimport logo from '../assets/only_logo.svg';\r\n\r\nconst MiniLogo = () => {\r\n    return (\r\n        <div className=\"center image-centerd animated rubberBand \">\r\n            <img src={logo} alt=\"logo\"\r\n                style={/**Satanic IIFE */\r\n                    ((value) => ({\r\n                        height: `${value}px`,\r\n                        width: `${value}px`\r\n                    }))(100)\r\n                } />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MiniLogo;","import environment from './base';\r\n\r\nconst host = '';\r\nconst env = environment(host);\r\n\r\nexport default {\r\n    ...env,\r\n};\r\n","const basePath = 'api';\r\n\r\nexport default (host) => {\r\n    return {\r\n        api: `${host}/${basePath}`,\r\n        isProduction: true,\r\n        isDevelopment: false,\r\n    };\r\n}\r\n","import axios from 'axios';\r\nimport environment from 'environment';\r\n\r\nconst baseUrl = environment.api;\r\n\r\nexport class AuthService {\r\n\r\n    async loginWithSocial(social) {\r\n        const requestUrl = `${baseUrl}/auth/${social}`;\r\n        const response = await axios.get(requestUrl);\r\n        const fetchedUrl = response.request.responseURL;\r\n        console.log(response);\r\n        return fetchedUrl;\r\n    }\r\n\r\n    async register(data) {\r\n        try {\r\n            const requestUrl = `${baseUrl}/auth/register`\r\n            const response = await axios.post(requestUrl, data, { headers: { 'content-type': 'application/json' } });\r\n            return response.data;\r\n        } catch (error) {\r\n            if (error?.response?.status === 403) {\r\n                throw new Error('User already registered');\r\n            }\r\n            if (error?.response?.status === 500) {\r\n                throw new Error('Something wrong happened... try again later');\r\n            }\r\n        }\r\n    }\r\n    async login(data) {\r\n        try {\r\n            const requestUrl = `${baseUrl}/auth/email`\r\n            const response = await axios.post(requestUrl, data, { headers: { 'content-type': 'application/json' }, withCredentials:true });\r\n            console.log(response);\r\n            return response.data;\r\n        } catch (error) {\r\n            const {data, status} = error.response;\r\n            const message = data?.errors[0]?.msg;\r\n            if (status === 500) {\r\n                throw new Error('Something wrong happened... try again later');\r\n            } else {\r\n                throw new Error(message);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectUser } from '../../redux/auth/auth.selector';\r\nimport { registerSuccess } from '../../redux/auth/auth.actions';\r\nimport { validatePassword } from '../../utils/RegisterUtils';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport MiniLogo from '../mini-logo';\r\nimport authService from '../../services/AuthService';\r\n\r\nconst RegisterForm = ({ registerUser, user }) => {\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [passwordFeedback, setPasswordFeedback] = useState('');\r\n    const [validPassword, setValidPassword] = useState(false);\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [passwordConfirmed, setPasswordConfifmed] = useState(false);\r\n    const [confirmPasswordFeedback, setConfirmPasswordFeedback] = useState('');\r\n    const [isRegistered, setIsRegistered] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (password !== confirmPassword) {\r\n            setConfirmPasswordFeedback('Passwords are different');\r\n            setPasswordConfifmed(false);\r\n        }\r\n        else {\r\n            setConfirmPasswordFeedback('');\r\n            setPasswordConfifmed(true);\r\n        }\r\n    },\r\n        [password, confirmPassword]);\r\n\r\n    useEffect(() => {\r\n        if (password === '') setPasswordFeedback('');\r\n        else if (!validatePassword(password)) {\r\n            setPasswordFeedback('Password must have at least one capital letter, one lowercase letter, one number and one special character (! @ # \\$ % \\^ & \\*)');\r\n        } else {\r\n            setPasswordFeedback('');\r\n            setValidPassword(true);\r\n        }\r\n    }, [password]);\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (validPassword && passwordConfirmed) {\r\n            user = { email, displayName: name, password, username };\r\n            authService.register(user)\r\n                .then(value => {\r\n                    console.log(value);\r\n                    setIsRegistered(true);\r\n                    alert('user registered');\r\n                })\r\n                .catch(error => {\r\n                    setConfirmPasswordFeedback(error.message);\r\n                });\r\n\r\n        }\r\n    };\r\n    if (isRegistered) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n    return (\r\n        <>\r\n            <MiniLogo />\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" required\r\n                        id=\"inputName\" placeholder=\"Enter name\"\r\n                        onChange={(e) => setName(e.target.value)} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" id=\"inputUsername\"\r\n                        placeholder=\"Enter username\" required\r\n                        onChange={(e) => setUsername(e.target.value)} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"email\" className=\"form-control\" id=\"inputEmail1\"\r\n                        aria-describedby=\"emailHelp\" placeholder=\"Enter email\" required\r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"password\" className=\"form-control\" required placeholder=\"Password\"\r\n                        id=\"inputPassword1\" onChange={(e) => setPassword(e.target.value)} />\r\n                    <small id=\"passwordFeedback\" className=\"form-text text-danger\">{passwordFeedback}</small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"password\" className=\"form-control\" required placeholder=\"Confirm Password\"\r\n                        id=\"inputPassword2\" onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                    <small id=\"passwordFeedback\" className=\"form-text text-danger\">{confirmPasswordFeedback}</small>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-warning btn-block text-light\">Register</button>\r\n            </form>\r\n            <div className=\"spacer-mini\" />\r\n            <small className=\"center\">Already have an account? <Link style={{ paddingLeft: '5px' }} to=\"/login\">Login here</Link></small>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    user: selectUser\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    registerUser: user => dispatch(registerSuccess(user))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(RegisterForm);\r\n\r\n","export const validatePassword = (string) => /(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/.test(string);","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { connect} from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectUser } from '../../redux/auth/auth.selector';\r\n\r\nconst AuthPage = ({image, children}) =>{\r\n    return (\r\n        <div className=\"p-3 fill-height center\" style={{\r\n            backgroundImage: `url(${image})`,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundAttachment: 'fixed',\r\n            backgroundSize: 'cover'\r\n        }}>\r\n            <div  className=\"animated faster fadeIn\">\r\n                <Card className=\"shadowed\"\r\n                style={{ width: '20rem', padding:'15px' }}>\r\n                    {children}\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    user: selectUser\r\n});\r\n\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(AuthPage);","import React, { Fragment } from 'react';\r\nimport RegisterForm from '../../components/register/register-form';\r\nimport AuthPage from './auth-page';\r\nimport image from '../../assets/register_bg.jpg';\r\n\r\nconst RegisterPage = () => {\r\n    return (\r\n        <>\r\n        <AuthPage image = {image}>\r\n            <RegisterForm/>\r\n        </AuthPage>\r\n    </>\r\n    )\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React, { useState } from 'react';\r\nimport { Redirect,Switch, Route } from 'react-router-dom';\r\nimport environment from 'environment';\r\nimport { useStore } from 'react-redux';\r\n\r\nconst baseUrl = environment.api;\r\n\r\nconst SocialNetworkButton = ({ logo, text, action, btnClass }) => {\r\n    return (\r\n        <button className={`btn btn-block ${btnClass}`} \r\n        onClick={() => window.location.href = `${baseUrl}/auth/${action}`}>\r\n            <span className=\"content-horizontal\">\r\n                <img src={logo} alt=\"logo\"\r\n                    style={/**Satanic IIFE */\r\n                        ((value) => ({\r\n                            height: `${value}px`,\r\n                            width: `${value}px`,\r\n                            marginRight: \"12px\"\r\n                        }))(20)\r\n                    } />\r\n                {text}\r\n            </span>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default SocialNetworkButton;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectUser } from '../../redux/auth/auth.selector';\r\nimport { loginFailure } from '../../redux/auth/auth.actions';\r\nimport { Link } from 'react-router-dom';\r\nimport MiniLogo from '../mini-logo';\r\nimport SocialNetworkButton from './social-network-button'\r\nimport gLogo from '../../assets/google_logo.svg';\r\nimport fLogo from '../../assets/fb_logo.svg';\r\nimport authService from '../../services/AuthService';\r\n\r\n\r\nconst LoginForm = ({ user }) => {\r\n    const [password, setPassword] = useState('');\r\n    const [identifier, setIdentifier] = useState('');\r\n    const [errorFeedback, setErrorFeedback] = useState('');\r\n\r\n    useEffect(() => setErrorFeedback(''),[password,identifier]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        user = { identifier, password };\r\n        authService.login(user)\r\n            .then(value => {\r\n                alert('Logged In!');\r\n                window.location.href = '/';\r\n            })\r\n            .catch(error => {\r\n                setErrorFeedback(error.message);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <MiniLogo />\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" required\r\n                        id=\"inputName\" placeholder=\"Enter email or username\"\r\n                        onChange={(e) => setIdentifier(e.target.value)} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"password\" className=\"form-control\" required placeholder=\"Password\"\r\n                        id=\"inputPassword2\" onChange={(e) => setPassword(e.target.value)} />\r\n\r\n                    <small id=\"passwordFeedback\" className=\"form-text text-danger\">{errorFeedback}</small>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-warning btn-block text-light\">Log in</button>\r\n            </form>\r\n            <div className=\"spacer-mini\" />\r\n            <SocialNetworkButton action=\"google\" text=\"Log in with Google\" logo={gLogo} btnClass=\"btn-outline-primary\" />\r\n            <SocialNetworkButton action=\"facebook\" text=\"Log in with Facebook\" logo={fLogo} btnClass=\"btn-outline-primary\" />\r\n            <div className=\"spacer-mini\" />\r\n            <small className=\"center\">Don't have an account? <Link style={{ paddingLeft: '5px' }} to=\"/register\">Register here</Link></small>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    user: selectUser\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    loginFailure: error => dispatch(loginFailure(error))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(LoginForm);\r\n\r\n","import React from 'react';\r\nimport LoginForm from '../../components/login/login-form';\r\nimport AuthPage from './auth-page';\r\nimport image from '../../assets/login_bg.jpg';\r\n\r\nconst LoginPage = () =>{\r\n    return (\r\n        <>\r\n            <AuthPage image = {image}>\r\n                <LoginForm/>\r\n            </AuthPage>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default LoginPage;","import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    } else {\r\n        delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n}\r\n\r\nexport default setAuthToken;\r\n","import React from 'react'\r\nimport logo from '../../assets/only_logo.svg';\r\nconst SidebarLogo = () => {\r\n    return (\r\n        <div className=\"col \">\r\n            <div className=\"center image-centerd\">\r\n                <img className=\"animated fast sidebar-logo rubberBand\"\r\n                    src={logo} alt=\"logo\"\r\n                    style={/**Satanic IIFE */\r\n                        ((value) => ({\r\n                            height: `${value}px`,\r\n                            width: `${value}px`,\r\n                            marginTop: '20px'\r\n                        }))(100)\r\n                    } />\r\n            </div>\r\n            <h5 className=\"center\"><strong>SETLIST HERO</strong></h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarLogo;\r\n\r\n","import React, { useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport './sidebar-element.css';\r\n\r\nconst SidebarElement = ({ children, text, path }) => {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const selected = location.pathname.match(path);\r\n\r\n    return (\r\n        <div className={`row selectable ${selected ? 'selected' : ''}`} style={{ padding: '10px' }}\r\n            onClick={() => history.push(`/${path}`)}>\r\n            <div className=\"col\">\r\n                <div className=\"row align-items-center\">\r\n                    <div className=\"col-sm-1\">\r\n                        {children}\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <span className=\"h6\" >{text}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default SidebarElement;\r\n","import React from 'react'\r\nimport logo from '../../assets/dashboard.svg';\r\nexport default {\r\n    dashboard: {\r\n        text: 'Dashboard',\r\n        icon: <img src={logo} alt=\"logo\" className=\"fas dashboard\"/>,\r\n        path: 'dashboard'\r\n    },\r\n    profile: {\r\n        text: 'Profile',\r\n        icon: <i className=\"fas fa-user\" />,\r\n        path: 'profile'\r\n    },\r\n    bands: {\r\n        text: 'Bands',\r\n        icon: <i className=\"fas fa-users\" />,\r\n        path: 'bands'\r\n    },\r\n    setlist: {\r\n        text: 'Setlists',\r\n        icon: <i className=\"fas fa-list\" />,\r\n        path: 'setlists'\r\n    },\r\n}","import React, { useState } from 'react';\r\nimport SidebarLogo from './sidebar-logo';\r\nimport SidebarElement from './sidebar-element';\r\nimport iconsAndNames from './icons-and-element-names';\r\nimport { withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectUser } from '../../redux/auth/auth.selector';\r\nimport { logout } from '../../redux/auth/auth.actions';\r\nimport Cookies from 'js-cookie';\r\n\r\nimport './sidebar-element.css';\r\n\r\nconst Sidebar = () => {\r\n    const renderSidebarElements = Object.keys(iconsAndNames).map(\r\n        (element, index) => {\r\n            const { text, icon, path } = iconsAndNames[element];\r\n            return (\r\n                <SidebarElement\r\n                    key={index}\r\n                    text={text}\r\n                    path={path} >\r\n                    {icon}\r\n                </SidebarElement>\r\n            )\r\n        });\r\n\r\n\r\n    const onLogout = () => {\r\n        logout();\r\n        Cookies.remove('jwt');\r\n        window.location.href = '/';\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row justify-content-center\">\r\n                <SidebarLogo />\r\n            </div>\r\n            <hr style={{ margin: '5px', backgroundColor: 'gray' }} />\r\n            {renderSidebarElements}\r\n            <div className=\"spacer-lg\" />\r\n            <span className=\"center\">\r\n                <button className=\"btn btn-warning text-light\" onClick={onLogout}>\r\n                    <i className=\"fas fa-sign-out-alt\"></i>\r\n                    {' Logout'}\r\n                </button>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    user: selectUser\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    logout: () =>\r\n        dispatch(logout())\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(Sidebar));","import React from 'react'\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst PageTitle = ({ title, children, className }) => {\r\n    return (\r\n        <Card style ={{paddingLeft: '50px',paddingTop:'15px', paddingBottom:'15px'}} className={className}>\r\n            <span className=\"h5\"><strong>{title}</strong></span>\r\n            <div className=\"spacer\"/>\r\n            <p className=\"text-muted\">{children}</p>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default PageTitle;","import React from 'react'\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst GenericBodyCard = ({ title, children, className}) => {\r\n    return (\r\n        <Card style ={{padding: '15px'}} className={className}>\r\n            {children}\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default GenericBodyCard;","const genreItems = [\r\n    {label: 'Rock', value: 'Rock'},\r\n    {label: 'Metal', value: 'Metal'},\r\n    {label: 'Pop', value: 'Pop'},\r\n    {label: 'Cumbias', value: 'Cumbias'},\r\n    {label: 'Norteñas', value: 'Norteñas'},\r\n];\r\n\r\nexport default genreItems;","import axios from 'axios';\r\nimport environment from 'environment';\r\n\r\nconst baseUrl = environment.api;\r\nexport default class BaseService {\r\n\r\n    constructor(resource) {\r\n        this.resource = resource;\r\n        this.resourceUrl = `${baseUrl}/${this.resource}`;\r\n    }\r\n\r\n    async create(obj) {\r\n        try {\r\n            const response = await axios.post(this.resourceUrl, obj);\r\n            return response.data;\r\n        } catch (error) {\r\n            if (error?.response?.status === 500) {\r\n                throw new Error('Something happened');\r\n            } else {\r\n                const { data } = error.response;\r\n                const errors = data?.errors;\r\n                throw errors;\r\n            }\r\n        }\r\n    }\r\n\r\n    async getById(id) {\r\n        try {\r\n            const response = await axios.get(`${this.resourceUrl}/${id}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            const { status } = error?.response?.status;\r\n            if (status === 500) {\r\n                throw new Error('Something happened');\r\n            } else if (status === 404 || status === 401) {\r\n                const { data } = error.response;\r\n                const message = data?.errors[0]?.msg;\r\n                throw new Error(message);\r\n            } else {\r\n                const { data } = error.response;\r\n                const errors = data?.errors;\r\n                throw errors;\r\n            }\r\n        }\r\n    }\r\n\r\n    async getAll({query,id}) {\r\n        try {\r\n            const response = await axios.get(`${this.resourceUrl}/?${query}=${id}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            if (error?.response?.status === 500) {\r\n                throw new Error('Something happened');\r\n            } else {\r\n                const { data } = error.response;\r\n                const errors = data?.errors;\r\n                throw errors;\r\n            }\r\n        }\r\n    }\r\n\r\n    async update(id, obj) {\r\n        try {\r\n            const response = await axios.put(`${this.resourceUrl}/${id}`, obj);\r\n            return response.data;\r\n        } catch (error) {\r\n            const { status } = error?.response?.status;\r\n            if (status === 500) {\r\n                throw new Error('Something happened');\r\n            } else if (status === 404 || status === 401) {\r\n                const { data } = error.response;\r\n                const message = data?.errors[0]?.msg;\r\n                throw new Error(message);\r\n            } else {\r\n                const { data } = error.response;\r\n                const errors = data?.errors;\r\n                throw errors;\r\n            }\r\n        }\r\n    }\r\n    \r\n    async delete(id) {\r\n        try {\r\n            await axios.delete(`${this.resourceUrl}/${id}`);\r\n            return 'Deletion succeed';\r\n        } catch (error) {\r\n            const { status } = error?.response?.status;\r\n            if (status === 500) {\r\n                throw new Error('Something happened');\r\n            } else if (status === 404 || status === 401) {\r\n                const { data } = error.response;\r\n                const message = data?.errors[0]?.msg;\r\n                throw new Error(message);\r\n            } else {\r\n                const { data } = error.response;\r\n                const errors = data?.errors;\r\n                throw errors;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import BaseService from './BaseService';\r\n\r\nclass BandService extends BaseService {\r\n    constructor(){\r\n        super('band');\r\n    }\r\n\r\n    async getAll(id){\r\n        return super.getAll({query:'manager', id})\r\n    }\r\n}\r\n\r\nexport default new BandService();","import BandActionTypes from './band.types';\r\n\r\nconst {FETCH_BANDS_SUCCESS, FETCH_BANDS_FAILURE, SELECT_BAND, UPDATE_SELECTED_BAND} = BandActionTypes;\r\n\r\nexport const fetchBandsSuccess = (bands) => ({\r\n    type: FETCH_BANDS_SUCCESS,\r\n    payload: bands\r\n});\r\n\r\nexport const fetchBandsFailure = (error) => ({\r\n    type: FETCH_BANDS_FAILURE,\r\n    payload: error\r\n});\r\n\r\nexport const selectBand = (band) => ({\r\n    type: SELECT_BAND,\r\n    payload: band\r\n});\r\n\r\nexport const updateSelectedBand = (band) => ({\r\n    type:UPDATE_SELECTED_BAND,\r\n    payload: band\r\n})","import {createSelector} from 'reselect';\r\n\r\nexport const bands = state => state.band\r\n\r\nexport const selectBands = createSelector(\r\n    [bands],\r\n    bandState => bandState.bands\r\n)\r\n\r\nexport const selectSelectedBand = createSelector(\r\n    [bands],\r\n    bandState => bandState.selectedBand\r\n);\r\n\r\n","import React from 'react'\r\n\r\nconst selected = (value) => {\r\n    if (value) {\r\n\r\n        return (\r\n            <div className=\"my-multiselected-item-token\">\r\n                <span>{value}</span>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return <span>Select genre</span>\r\n    }\r\n}\r\nexport default selected;","import React, { useState, useRef, useReducer } from 'react'\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport Button from 'react-bootstrap/Button';\r\nimport genreItems from './genre-items';\r\nimport bandService from '../../services/BandService';\r\nimport { connect } from 'react-redux';\r\nimport { fetchBandsSuccess } from '../../redux/band/band.actions';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectUser } from '../../redux/auth/auth.selector';\r\nimport { selectBands } from '../../redux/band/band.selector';\r\nimport { Growl } from 'primereact/growl'\r\nimport selected from '../multiselect-selected';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport environment from 'environment';\r\n\r\nconst baseUrl = environment.api;\r\n\r\n\r\n\r\nconst CreateBand = ({ user, callback, fetchBands, bands }) => {\r\n    const [genres, setGenres] = useState('');\r\n    const [imageUrl, setImageUrl] = useState(undefined);\r\n    const [bandName, setBandName] = useState('');\r\n    const [bandDescription, setBandDescription] = useState('');\r\n    const history = useHistory();\r\n\r\n    let growl = useRef(null);\r\n    let bandCreated = useRef(null);\r\n\r\n    const onUpload = (e) => {\r\n        growl.current.show({ severity: 'success', summary: 'Success', detail: 'File Uploaded' });\r\n        const response = JSON.parse(e.xhr.response);\r\n        setImageUrl(response.downloadUrl);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const band = {\r\n            name: bandName,\r\n            description: bandDescription,\r\n            genres,\r\n            manager: user.id,\r\n            logo: imageUrl\r\n        };\r\n        bandService.create(band)\r\n            .then((result) => {\r\n                const newBands = bands.concat({ ...result, genres: result.genres.map((genre, index) => index === 0 ? genre : ` ${genre}`).join() })\r\n                callback();\r\n                fetchBands(newBands);\r\n                bandCreated.current.show({ severity: 'success', summary: 'Success', detail: 'Band Created' });\r\n\r\n            })\r\n            .catch((error) => {\r\n                bandCreated.current.show({ severity: 'error', summary: 'Error Message', detail: \"Couldn't create band\" });\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Growl ref={bandCreated} position=\"topright\"></Growl>\r\n            <Growl ref={growl} position=\"topright\"></Growl>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-5\">\r\n                        <div className=\"form-group\">\r\n                            <label className=\"h6\" htmlFor=\"create-band-profile-pic\"><strong>Upload band logo</strong></label>\r\n                            <div>\r\n                                <FileUpload\r\n                                    name=\"data\" id=\"create-band-profile-pic\"\r\n                                    multiple={false}\r\n                                    url={`${baseUrl}/storage/upload`}\r\n                                    onUpload={onUpload}\r\n                                    accept=\"image/*\" maxFileSize={1000000} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"h6\">Profile selected:</label>\r\n                            {imageUrl && <img className=\"animated faster fadeIn rounded\"src={imageUrl} alt=\"band logo\" style={{Left:'10px',height:'100px', width:'100px'}} />}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <div className=\"form-group\">\r\n                            <label className=\"h6\" htmlFor=\"band-name\"><strong>Band name</strong></label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"band-name\" onChange={(e) => setBandName(e.target.value)} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"h6\" htmlFor=\"band-description\"><strong>Band description</strong></label>\r\n                            <textarea className=\"form-control\" id=\"band-description\" rows=\"3\" onChange={(e) => setBandDescription(e.target.value)}></textarea>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"row\">\r\n                                <label className=\"h6 col\" htmlFor=\"band-genres\">\r\n                                    <strong>Band genres</strong>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <MultiSelect\r\n                                        style={{ width: '70%', minWidth: '12em' }}\r\n                                        maxSelectedLabels={10}\r\n                                        placeholder=\"Select genres\"\r\n                                        optionLabel=\"label\"\r\n                                        optionValue=\"value\"\r\n                                        id=\"Band-genres\"\r\n                                        value={genres}\r\n                                        options={genreItems}\r\n                                        onChange={(e) => setGenres(e.value)}\r\n                                        selectedItemTemplate={selected}\r\n\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-8\"></div>\r\n                            <div className=\"col\">\r\n                                <Button style={{ marginRight: '10px' }} variant=\"success\" type=\"submit\" >Save</Button>\r\n                                <Button variant=\"secondary\" onClick={callback}>Close</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    user: selectUser,\r\n    bands: selectBands\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchBands: bands => dispatch(fetchBandsSuccess(bands))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateBand);","import React from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport { InputText } from 'primereact/inputtext';\r\n\r\nconst TableHeader = ({isDialogDisplaying, setIsDialogDisplaying, setGlobalFilter, buttonText}) => (\r\n    <div className='container-fluid' style={{ paddingTop: '15px' }}>\r\n        <div className=\"row align-content-center\">\r\n            <div className=\"col-lg-2\" style={{ paddingBottom: '10px' }}>\r\n                <Button\r\n                    active={isDialogDisplaying}\r\n                    variant=\"success\"\r\n                    onClick={() => setIsDialogDisplaying(true)}>\r\n                    <span className=\"text-light\">\r\n                        <i className=\"fas fa-plus-square\" />\r\n                        {` ${buttonText}`}\r\n                    </span>\r\n                </Button>\r\n            </div>\r\n            <div style={{ paddingLeft: '750px' }} className=\"col\">\r\n                <InputText type=\"search\" placeholder=\"Search\" onInput={(e) => setGlobalFilter(e.target.value)} />\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\nexport default TableHeader;","import React, { useState} from 'react'\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport CreateBand from './create-band';\r\nimport { connect } from 'react-redux';\r\nimport { fetchBandsSuccess, fetchBandsFailure, selectBand } from '../../redux/band/band.actions';\r\nimport { selectBands } from '../../redux/band/band.selector';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport TableHeader from '../table-header';\r\nconst ManageBandsBody = ({bands, selectBand }) => {\r\n    const [globalFilter, setGlobalFilter] = useState(null);\r\n    const [isDialogDisplaying, setIsDialogDisplaying] = useState(false);\r\n    const [selectedColumn, setSelectedColumn] = useState(null);\r\n    const history = useHistory();\r\n\r\n    const createBandCallback = () => {\r\n        setIsDialogDisplaying(false);\r\n        \r\n    }\r\n    const chooseBand = e => {\r\n        selectBand(e.value);\r\n        history.push(`/bands/${e.value.id}`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                size=\"xl\"\r\n                show={isDialogDisplaying}\r\n                onHide={() => setIsDialogDisplaying(false)}\r\n                dialogClassName=\"modal-dialog-centered\"\r\n                aria-labelledby=\"modal-title\"\r\n                onExiting={() => setIsDialogDisplaying(false)}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"modal-title\">\r\n                        Create a band\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <CreateBand callback={createBandCallback} />\r\n                    <div className=\"spacer\" />\r\n                </Modal.Body>\r\n            </Modal>\r\n            <DataTable  \r\n                header={\r\n                    <TableHeader\r\n                        buttonText=\"Add band\"\r\n                        isDialogDisplaying={isDialogDisplaying}\r\n                        setGlobalFilte={setGlobalFilter}\r\n                        setIsDialogDisplaying={setIsDialogDisplaying} />\r\n                }\r\n                value={bands} scrollable scrollHeight=\"315px\"\r\n                globalFilter={globalFilter} sortField=\"name\"\r\n                selectionMode=\"single\" sortOrder={1}\r\n                selection={selectedColumn} onSelectionChange={chooseBand}>\r\n                <Column field=\"name\" header=\"Name\" sortable />\r\n                <Column style={{ width: '50%' }} field=\"description\" header=\"Description\" sortable />\r\n                <Column style={{ width: '25%' }} field=\"genres\" header=\"Genres\" sortable />\r\n                <Column field=\"active\" header=\"Active\" />\r\n            </DataTable>\r\n        </>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    bands: selectBands\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchBandsSuccess: bands => dispatch(fetchBandsSuccess(bands)),\r\n    fetchBandsFailure: error => dispatch(fetchBandsFailure(error)),\r\n    selectBand: band => dispatch(selectBand(band))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ManageBandsBody);","import React from 'react';\r\nimport { withRouter} from 'react-router-dom';\r\nimport PageTitle from '../../components/page-title';\r\nimport GenericBodyCard from '../../components/generic-body-card';\r\nimport ManageBandsBody from '../../components/manage-bands/manage-bands-body';\r\n\r\nconst BandsOverview = () => {\r\n\r\n    return (\r\n        <div className=\"container-fluid\" style={{ padding: '20px' }}>\r\n            <PageTitle className=\"shadowed animated faster bounceInRight\" title=\"Your Bands\">\r\n                Here you can organize, create, delete, edit and search your bands\r\n            </PageTitle>\r\n            <div className=\"spacer-sm\" />\r\n            <GenericBodyCard className=\"shadowed animated faster bounceInRight delayed\">\r\n                <ManageBandsBody />\r\n            </GenericBodyCard>\r\n        </div>\r\n    )\r\n};\r\nexport default BandsOverview;","import React,{useEffect} from 'react'\r\nimport Card from 'react-bootstrap/Card';\r\nimport { connect } from 'react-redux';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { selectSelectedBand } from '../../redux/band/band.selector';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nconst BandTitle = ({ className, selectedBand }) => {\r\n    const { name, logo, description, genres } = selectedBand\r\n    const generateGenreTags = genres.split(',').map(\r\n        (genre, index) => {\r\n            return (\r\n                <React.Fragment key={index}>\r\n                    <Badge key={index} className=\"h7\" variant=\"secondary\">{genre}</Badge>{' '}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    );\r\n\r\n    return (\r\n        <Card style={{paddingTop:'15px',paddingLeft: '10px', paddingBottom:'15px'}} className={className}>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-2 center\" >\r\n                        <img src={logo} className=\"rounded\"\r\n                            alt={name}\r\n                            style={\r\n                                ((value) => ({\r\n                                    height: `${value}px`,\r\n                                    width: `${value}px`\r\n                                }))(150)\r\n                            } />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <span className=\"h5\"><strong>{name}</strong></span>\r\n                        <div className=\"spacer-sm\" />\r\n                        <p className=\"text-muted\">{description}</p>\r\n                        <div>\r\n                            {generateGenreTags}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\nconst mapStateToProps = createStructuredSelector({\r\n    selectedBand: selectSelectedBand\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(BandTitle);","import React from 'react'\r\nimport {useHistory, useLocation, useParams} from 'react-router-dom';\r\nimport './top-bar-element.css';\r\n\r\nconst BandTopBarElement = ({text}) => {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const {id} = useParams();\r\n    const selected = location.pathname.match(`/bands/${id}/${text.toLowerCase()}`);\r\n\r\n    return (\r\n        <div className={`center col tbe-selectable ${selected ? 'tbe-selected' : ''}`}\r\n            onClick={() => history.push(`/bands/${id}/${text.toLowerCase()}`)}>\r\n            <h6><strong>{text}</strong></h6>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default BandTopBarElement;","import React from 'react'\r\nimport BandTopBarElement from './band-topbar-element';\r\nconst elementsInfo = ['Members', 'Songs', 'Events', 'Edit'];\r\n\r\nconst renderTopBandElements = elementsInfo.map(\r\n    (elementName, index) => (\r\n        <BandTopBarElement key={index} text={elementName}/>\r\n    )\r\n);\r\n\r\nconst BandTopBar = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n                {renderTopBandElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BandTopBar;","import {createSelector} from 'reselect';\r\n\r\nexport const musicians = state => state.musician\r\n\r\nexport const selectMusicians = createSelector(\r\n    [musicians],\r\n    musiciansState => musiciansState.musicians\r\n)","import MusicianActionTypes from './musician.types';\r\n\r\nconst {FETCH_MUSICIANS_FAILURE, FETCH_MUSICIANS_SUCCESS} = MusicianActionTypes;\r\n\r\nexport const fetchMusiciansSuccess = (musicians) => ({\r\n    type: FETCH_MUSICIANS_SUCCESS,\r\n    payload: musicians\r\n});\r\n\r\nexport const fetchMusiciansFailure = (error) => ({\r\n    type: FETCH_MUSICIANS_FAILURE,\r\n    payload: error\r\n});","import BaseService from './BaseService';\r\n\r\nclass MusicianService extends BaseService{\r\n    constructor(){\r\n        super('musician');\r\n    }\r\n\r\n    async getAll(id){\r\n        return super.getAll({query:'band', id})\r\n    }\r\n}\r\n\r\nexport default new MusicianService();","export default  [\r\n    { label: 'Voice', value: 'Voice' },\r\n    { label: 'Guitar', value: 'Guitar' },\r\n    { label: 'Bass', value: 'Bass' },\r\n    { label: 'Drums', value: 'Drums' },\r\n];","import React, { useState, useRef } from 'react'\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Growl } from 'primereact/growl'\r\n\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { connect } from 'react-redux';\r\nimport { selectMusicians } from '../../../redux/musician/musician.selector';\r\nimport { fetchMusiciansSuccess } from '../../../redux/musician/musician.actions';\r\nimport { selectSelectedBand } from '../../../redux/band/band.selector';\r\nimport musicianService from '../../../services/MusicianService';\r\nimport options from './instruments-options';\r\n\r\nconst AddBandMember = ({ callback, selectedBand, musicians, fetchMusicians }) => {\r\n    const [selectedInstrument, setSelectedInstrument] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    let memberAdded = useRef(null);\r\n    let memberError = useRef(null);\r\n\r\n    \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const musician = {\r\n            instrument: selectedInstrument,\r\n            email,\r\n            band: selectedBand.id\r\n        }\r\n        musicianService.create(musician)\r\n            .then(musician => {\r\n                setTimeout(callback, 1000);\r\n                memberAdded.current.show({ life: 650, severity: 'success', summary: 'Success', detail: 'Member added' });\r\n                return musicianService.getById(musician.id)\r\n            })\r\n            .then(musician => {\r\n                const {band, instrument, id, email, user} = musician;\r\n                return {\r\n                    band,\r\n                    instrument, //transform to Pascal case\r\n                    email,\r\n                    id,\r\n                    status: user ? 'Active' : 'Pending',\r\n                    username: user?.username,\r\n                    name: user?.displayName\r\n                };\r\n            })\r\n            .then(newMusician => fetchMusicians(musicians.concat(newMusician)))\r\n            .catch(e => {\r\n                memberError.current.show({ severity: 'error', summary: 'Error Message', detail: \"Couldn't add member\" });\r\n            });\r\n\r\n    }\r\n    return (\r\n        <>\r\n\r\n            <Growl ref={memberAdded} position=\"topright\"></Growl>\r\n            <Growl ref={memberError} position=\"topright\"></Growl>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"inputEmail3\" className=\"col-sm-3 col-form-label h6\">Email</label>\r\n                    <div class=\"col-sm-9\">\r\n                        <input value={email} onChange={e => setEmail(e.target.value)} type=\"email\" className=\"form-control\" id=\"inputEmail3\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"member-instrument\" className=\"col-sm-3 col-form-label h6\">Instrument</label>\r\n                    <div class=\"col-sm-9\">\r\n                        <Dropdown options={options} value={selectedInstrument} onChange={e => setSelectedInstrument(e.value)} placeholder=\"Select an instrument\" id=\"member-instrument\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-7\" />\r\n                    <div className=\"col\" style={{ paddingLeft: '35px' }}>\r\n                        <button type=\"submit\" className=\"btn btn-success mb-2\">Submit</button>{' '}\r\n                        <button type=\"button\" className=\"btn btn-secondary mb-2\" onClick={callback}>Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    selectedBand: selectSelectedBand,\r\n    musicians: selectMusicians\r\n});\r\nconst mapDispatchTopProps = dispatch => ({\r\n    fetchMusicians: musicians => dispatch(fetchMusiciansSuccess(musicians))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchTopProps)(AddBandMember);","import React, { useState, useEffect, useRef } from 'react'\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { Button } from 'primereact/button';\r\nimport { Growl } from 'primereact/growl';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { connect } from 'react-redux';\r\nimport { selectSelectedBand } from '../../../redux/band/band.selector';\r\nimport { selectMusicians } from '../../../redux/musician/musician.selector';\r\nimport { fetchMusiciansSuccess, fetchMusiciansFailure } from '../../../redux/musician/musician.actions';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport TableHeader from '../../table-header';\r\nimport AddBandMember from './add-band-member';\r\nimport musicianService from '../../../services/MusicianService';\r\nimport options from './instruments-options';\r\n\r\nconst BandMembers = ({ musicians, fetchMusicians, band, fetchFailure }) => {\r\n    const [globalFilter, setGlobalFilter] = useState(null);\r\n    const [isDialogDisplaying, setIsDialogDisplaying] = useState(false);\r\n    const [isConfirmDialogDisplaying, setIsConfirmDialogDisplaying] = useState(false);\r\n    const [isUpdateDialogDisplaying, setIsUpdateDialogDisplaying] = useState(false);\r\n    const [musicianToBeModified, setMusicianToBeModified] = useState(null);\r\n    const [selectedInstrument, setSelectedInstrument] = useState('');\r\n    let memberModified = useRef(null);\r\n\r\n    useEffect(() => {\r\n        musicianService.getAll(band.id)\r\n            .then(results => {\r\n                const newMusicians = results.map(\r\n                    result => {\r\n                        const { band, instrument, email, id, user } = result;\r\n                        return {\r\n                            band,\r\n                            instrument,\r\n                            email,\r\n                            id,\r\n                            status: user ? 'Active' : 'Pending',\r\n                            username: user?.username,\r\n                            name: user?.displayName\r\n                        };\r\n                    }\r\n                );\r\n\r\n                fetchMusicians(newMusicians);\r\n            })\r\n            .catch(error => {\r\n                fetchFailure(error);\r\n            })\r\n    }, []);\r\n\r\n    const handleUpdate = () => {\r\n        musicianService.update(musicianToBeModified.id, { instrument: selectedInstrument })\r\n            .then(e => {\r\n                fetchMusicians(musicians.map(\r\n                    musician => {\r\n                        const { band, email, id, status, username, name } = musician;\r\n                        if (musicianToBeModified.id === id)\r\n                            return {\r\n                                band,\r\n                                email,\r\n                                id,\r\n                                status,\r\n                                username,\r\n                                name,\r\n                                instrument: [selectedInstrument[0].toUpperCase(), selectedInstrument.slice(1)].join('')\r\n                            }\r\n                        else return musician;\r\n\r\n                    }));\r\n                memberModified.current.show({ severity: 'success', summary: 'Success', detail: 'Member edited!' });\r\n                setIsUpdateDialogDisplaying(false);\r\n                setMusicianToBeModified(null);\r\n            })\r\n            .catch(() => {\r\n                memberModified.current.show({ severity: 'error', summary: 'Error Message', detail: \"Couldn't edit member\" });\r\n                setIsUpdateDialogDisplaying(false);\r\n            })\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        musicianService.delete(musicianToBeModified.id)\r\n            .then(e => {\r\n                fetchMusicians(musicians.filter(musician => musician.id !== musicianToBeModified.id));\r\n                setMusicianToBeModified(null);\r\n                memberModified.current.show({ severity: 'success', summary: 'Success', detail: 'Member deleted' });\r\n                setIsConfirmDialogDisplaying(false)\r\n            })\r\n            .catch(() => {\r\n                memberModified.current.show({ severity: 'error', summary: 'Error Message', detail: \"Couldn't delete member\" });\r\n                setIsConfirmDialogDisplaying(false)\r\n            });\r\n    }\r\n\r\n    const deleteBodyTemplate = (rowData) => {\r\n        const handleClick = (data) => {\r\n            setMusicianToBeModified(data);\r\n            setIsConfirmDialogDisplaying(true);\r\n        };\r\n        return (\r\n            <Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-secondary\" onClick={() => handleClick(rowData)}></Button>\r\n        );\r\n    };\r\n\r\n    const editBodyTemplate = (rowData) => {\r\n        const handleClick = (data) => {\r\n            setMusicianToBeModified(data);\r\n            setIsUpdateDialogDisplaying(true);\r\n        };\r\n        return (\r\n            <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-secondary\" \r\n                onClick={() => handleClick(rowData)}/>\r\n        );\r\n    };\r\n\r\n    const renderDeleteModal = (\r\n        <Modal show={isConfirmDialogDisplaying} onHide={() => setIsConfirmDialogDisplaying(false)} centered> \r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Confirm deletion</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {`You are about to delete ${musicianToBeModified?.username} are you sure?`}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <button className=\"btn btn-danger\" onClick={handleDelete}>\r\n                    Delete\r\n                    </button>\r\n                <button className=\"btn btn-secondary\" onClick={() => setIsConfirmDialogDisplaying(false)}>\r\n                    Close\r\n                    </button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n\r\n    const renderUpdateModal = (\r\n        <Modal show={isUpdateDialogDisplaying} onHide={() => setIsUpdateDialogDisplaying(false)} centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Confirm update</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <>\r\n                    <p><strong>{`You can only edit ${musicianToBeModified?.username}'s instrument`}</strong></p>\r\n                    <div className=\"spacer-mini\" />\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <label htmlFor=\"member-instrument\" className=\"col-sm-3 col-form-label h6\">Instrument</label>\r\n                            <div class=\"col-sm-9\">\r\n                                <Dropdown options={options} value={selectedInstrument} onChange={e => setSelectedInstrument(e.value)} placeholder=\"Select an instrument\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <button className=\"btn btn-primary\" onClick={handleUpdate}>\r\n                    Edit\r\n                </button>\r\n                <button className=\"btn btn-secondary\" onClick={() => setIsUpdateDialogDisplaying(false)}>\r\n                    Close\r\n                </button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Growl ref={memberModified} position=\"topright\"></Growl>\r\n            {renderDeleteModal}\r\n            {renderUpdateModal}\r\n            <Modal\r\n                show={isDialogDisplaying}\r\n                onHide={() => setIsDialogDisplaying(false)}\r\n                dialogClassName=\"modal-90w\"\r\n                aria-labelledby=\"modal-title\"\r\n                centered\r\n                onExiting={() => setIsDialogDisplaying(false)}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"modal-title\">\r\n                        Add band member\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <AddBandMember callback={() => setIsDialogDisplaying(false)} />\r\n                </Modal.Body>\r\n            </Modal>\r\n            <DataTable id=\"band-members-table\" value={musicians}\r\n                className=\"animated faster fadeIn \"\r\n                resizableColumns={true}\r\n                header={\r\n                    <TableHeader\r\n                        buttonText=\"Add member\"\r\n                        isDialogDisplaying={isDialogDisplaying}\r\n                        setGlobalFilte={setGlobalFilter}\r\n                        setIsDialogDisplaying={setIsDialogDisplaying} />\r\n                }\r\n                scrollable scrollHeight=\"315px\"\r\n                globalFilter={globalFilter} sortField=\"name\"\r\n                selectionMode=\"single\">\r\n                <Column field=\"name\" header=\"Name\" sortable />\r\n                <Column field=\"username\" header=\"Username\" sortable style={{ width: '13%' }} />\r\n                <Column field=\"email\" header=\"Email\" sortable />\r\n                <Column field=\"instrument\" header=\"Instrument\" sortable style={{ width: '13%' }} />\r\n                <Column field=\"status\" header=\"Status\" sortable />\r\n                <Column body={editBodyTemplate} headerStyle={{ width: '4em', textAlign: 'center' }} bodyStyle={{ textAlign: 'center', overflow: 'visible' }} />\r\n                <Column body={deleteBodyTemplate} headerStyle={{ width: '4em', textAlign: 'center' }} bodyStyle={{ textAlign: 'center', overflow: 'visible' }} />\r\n            </DataTable>\r\n        </>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    musicians: selectMusicians,\r\n    band: selectSelectedBand\r\n});\r\n\r\nconst mapDispatchTopProps = dispatch => ({\r\n    fetchMusicians: musicians => dispatch(fetchMusiciansSuccess(musicians)),\r\n    fetchFailure: error => dispatch(fetchMusiciansFailure(error))\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchTopProps\r\n)(BandMembers);","import React, { useState } from 'react'\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { connect } from 'react-redux';\r\nimport { selectBands } from '../../../redux/band/band.selector';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport TableHeader from '../../table-header';\r\n\r\nconst BandEvents = ({ bands, selectBand }) => {\r\n    const [globalFilter, setGlobalFilter] = useState(null);\r\n    const [isDialogDisplaying, setIsDialogDisplaying] = useState(false);\r\n\r\n    const createBandCallback = () => {\r\n        setIsDialogDisplaying(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                size=\"xl\"\r\n                show={isDialogDisplaying}\r\n                onHide={() => setIsDialogDisplaying(false)}\r\n                dialogClassName=\"modal-dialog-centered\"\r\n                aria-labelledby=\"modal-title\"\r\n                onExiting={() => setIsDialogDisplaying(false)}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"modal-title\">\r\n                        Add member\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n                    <div className=\"spacer\" />\r\n                </Modal.Body>\r\n            </Modal>\r\n            <DataTable className=\"animated faster fadeIn\"\r\n                header={\r\n                    <TableHeader\r\n                        buttonText=\"Add event\"\r\n                        isDialogDisplaying={isDialogDisplaying}\r\n                        setGlobalFilte={setGlobalFilter}\r\n                        setIsDialogDisplaying={setIsDialogDisplaying} />\r\n                }\r\n                scrollable scrollHeight=\"315px\"\r\n                globalFilter={globalFilter} sortField=\"name\"\r\n                selectionMode=\"single\">\r\n                <Column field=\"name\" header=\"Name\" sortable />\r\n                <Column field=\"date\" header=\"Date\" sortable />\r\n                <Column field=\"location\" header=\"Location\" sortable />\r\n                <Column field=\"designer\" header=\"Designer\" sortable />\r\n                <Column field=\"tags\" header=\"Tags\" sortable />\r\n            </DataTable>\r\n        </>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    bands: selectBands\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(BandEvents);","import {createSelector} from 'reselect';\r\n\r\nexport const songs = state => state.song;\r\n\r\nexport const selectSelectedSong = createSelector(\r\n    [songs],\r\n    songsState => songsState.song\r\n)\r\n\r\nexport const selectSongs = createSelector(\r\n    [songs],\r\n    songsState => songsState.songs\r\n)","import SongActionsTypes from './song.types';\r\n\r\nconst {FETCH_SONGS, SELECT_SONG} = SongActionsTypes;\r\n\r\nexport const fetchSongs = (songs) => ({\r\n    type: FETCH_SONGS,\r\n    payload: songs\r\n});\r\n\r\nexport const selectSong = (song) => ({\r\n    type: SELECT_SONG,\r\n    payload: song\r\n})","import BaseService from './BaseService';\r\n\r\nclass SongService extends BaseService{\r\n    constructor(){\r\n        super('song');\r\n    }\r\n\r\n    async getAll(id){\r\n        return super.getAll({query:'band', id})\r\n    }\r\n}\r\n\r\nexport default new SongService();","import React, { useState, useRef } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { selectSelectedBand } from '../../../redux/band/band.selector';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { Chips } from 'primereact/chips';\r\nimport { Growl } from 'primereact/growl';\r\nimport { selectSongs } from '../../../redux/song/song.selector';\r\nimport { fetchSongs } from '../../../redux/song/song.actions';\r\nimport songService from '../../../services/SongService';\r\n\r\nconst AddSong = ({ callback, selectedBand, songs, fetchSongs }) => {\r\n    const [name, setName] = useState('');\r\n    const [tempo, setTempo] = useState(null);\r\n    const [tags, setTags] = useState([]);\r\n    let songMessage = useRef(null);\r\n    let songMessageFailed = useRef(null);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const song = { band: selectedBand.id, name, tempo, tags };\r\n        songService.create(song)\r\n            .then(song => {\r\n                setTimeout(callback, 1000);\r\n                songMessage.current.show({ life: 650, severity: 'success', summary: 'Success', detail: 'Song added' });\r\n                return { ...song, tags: song.tags.join(', ') };\r\n            })\r\n            .then(newSong => fetchSongs(songs.concat(newSong)))\r\n            .catch(e => {\r\n                songMessageFailed.current.show({ severity: 'error', summary: 'Error Message', detail: \"Couldn't add song\" })\r\n            });\r\n    }\r\n    return (\r\n        <>\r\n            <Growl ref={songMessage} position=\"topright\"></Growl>\r\n            <Growl ref={songMessageFailed} position=\"topright\"></Growl>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"song-name\" className=\"col-sm-2 col-form-label\">Name</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input  onChange={(e) => setName(e.target.value)} type=\"text\" className=\"form-control\" id=\"song-name\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"song-tempo\" className=\"col-sm-2 col-form-label\">Tempo</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input  onChange={(e) => setTempo(e.target.value)} type=\"number\" className=\"form-control\" id=\"song-tempo\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"song-tags\" className=\"col-sm-2 col-form-label\">Tags</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <Chips value={tags} onChange={(e) => setTags(e.value)} separator=','></Chips>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-6\" />\r\n                    <div className=\"col\" style={{ paddingLeft: '39px' }}>\r\n                        <button type=\"submit\" className=\"btn btn-success mb-2\" >Create song</button>{' '}\r\n                        <button type=\"button\" className=\"btn btn-secondary mb-2\" onClick={callback}>Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = createStructuredSelector({\r\n    songs: selectSongs,\r\n    selectedBand: selectSelectedBand\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchSongs: songs => dispatch(fetchSongs(songs))\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddSong);","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Button } from 'primereact/button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { connect } from 'react-redux';\r\nimport { selectSelectedBand } from '../../../redux/band/band.selector';\r\nimport { selectSongs } from '../../../redux/song/song.selector';\r\nimport { fetchSongs, selectSong } from '../../../redux/song/song.actions';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { Growl } from 'primereact/growl';\r\nimport TableHeader from '../../table-header';\r\nimport AddSong from './add-song';\r\nimport songService from '../../../services/SongService';\r\n\r\nconst BandSongs = ({ songs, band, fetchSongs, selectSong }) => {\r\n    const [globalFilter, setGlobalFilter] = useState(null);\r\n    const [isDialogDisplaying, setIsDialogDisplaying] = useState(false);\r\n    const [isConfirmDialogDisplaying, setIsConfirmDialogDisplaying] = useState(false);\r\n    const [songToBeDeleted, setSongToBeDeleted] = useState(null);\r\n    let songModified = useRef(null);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        songService.getAll(band.id)\r\n            .then(songs => {\r\n                fetchSongs(\r\n                    songs.map(song => ({ ...song, tags: song.tags.join(', ') }))\r\n                );\r\n            });\r\n    }, []);\r\n\r\n    const handleDelete = () => {\r\n        songService.delete(songToBeDeleted.id)\r\n            .then(() => {\r\n                setSongToBeDeleted(null);\r\n                songModified.current.show({ severity: 'success', summary: 'Success', detail: 'Member deleted' });\r\n                setIsConfirmDialogDisplaying(false)\r\n                fetchSongs(songs.filter(song => song.id !== songToBeDeleted.id));\r\n            })\r\n            .catch(() => {\r\n                songModified.current.show({ severity: 'error', summary: 'Error Message', detail: \"Couldn't delete member\" });\r\n                setIsConfirmDialogDisplaying(false)\r\n            });\r\n    }\r\n\r\n    const deleteBodyTemplate = (rowData) => {\r\n        const handleClick = (data) => {\r\n            setSongToBeDeleted(data);\r\n            setIsConfirmDialogDisplaying(true);\r\n        };\r\n        return (\r\n            <Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-secondary\" onClick={() => handleClick(rowData)}></Button>\r\n        );\r\n    };\r\n\r\n    const editBodyTemplate = (rowData) => {\r\n        const handleClick = (data) => {\r\n            selectSong(data);\r\n            history.push(`/bands/${band.id}/songs/${data.id}`);\r\n        };\r\n        return (\r\n            <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-secondary\" onClick={() => handleClick(rowData)}></Button>\r\n        );\r\n    };\r\n\r\n    const renderDeleteModal = (\r\n        <Modal show={isConfirmDialogDisplaying} onHide={() => setIsConfirmDialogDisplaying(false)} centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Confirm deletion</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {`You are about to delete ${songToBeDeleted?.name} are you sure?`}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <button className=\"btn btn-danger\" onClick={handleDelete}>\r\n                    Delete\r\n                    </button>\r\n                <button className=\"btn btn-secondary\" onClick={() => setIsConfirmDialogDisplaying(false)}>\r\n                    Close\r\n                    </button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n\r\n\r\n    return (\r\n        <>\r\n            <Growl ref={songModified} position=\"topright\"></Growl>\r\n            {renderDeleteModal}\r\n            <Modal\r\n                show={isDialogDisplaying}\r\n                onHide={() => setIsDialogDisplaying(false)}\r\n                dialogClassName=\"modal-dialog-centered\"\r\n                aria-labelledby=\"modal-title\"\r\n                onExiting={() => setIsDialogDisplaying(false)}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"modal-title\">\r\n                        Add song\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <AddSong callback={() => setIsDialogDisplaying(false)} />\r\n                </Modal.Body>\r\n            </Modal>\r\n            <DataTable value={songs} className=\"animated faster fadeIn\"\r\n                header={\r\n                    <TableHeader\r\n                        buttonText=\"Add song\"\r\n                        isDialogDisplaying={isDialogDisplaying}\r\n                        setGlobalFilte={setGlobalFilter}\r\n                        setIsDialogDisplaying={setIsDialogDisplaying} />\r\n                }\r\n                scrollable scrollHeight=\"315px\"\r\n                globalFilter={globalFilter} sortField=\"name\">\r\n                <Column field=\"name\" header=\"Name\" sortable />\r\n                <Column field=\"tags\" header=\"Tags\" sortable />\r\n                <Column field=\"tempo\" header=\"Tempo\" sortable />\r\n                <Column body={editBodyTemplate} headerStyle={{ width: '4em', textAlign: 'center' }} bodyStyle={{ textAlign: 'center', overflow: 'visible' }} />\r\n                <Column body={deleteBodyTemplate} headerStyle={{ width: '4em', textAlign: 'center' }} bodyStyle={{ textAlign: 'center', overflow: 'visible' }} />\r\n            </DataTable>\r\n        </>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    band: selectSelectedBand,\r\n    songs: selectSongs\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    selectSong: song => dispatch(selectSong(song)),\r\n    fetchSongs: songs => dispatch(fetchSongs(songs))\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(BandSongs);","import React from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { connect } from 'react-redux'\r\nimport { TreeTable } from 'primereact/treetable';\r\nimport { Column } from \"primereact/column\";\r\nimport { createStructuredSelector } from 'reselect'\r\nimport { selectSelectedBand } from '../../../redux/band/band.selector';\r\nimport { selectSelectedSong } from '../../../redux/song/song.selector';\r\n\r\nconst CustomHeader = ({lyricsCallback, setGlobalFilter, sheetsCallback}) => (\r\n    <div className='container-fluid' style={{ paddingTop: '15px' }}>\r\n        <div className=\"row align-content-center\">\r\n            <div className=\"col-lg-2\" style={{ paddingBottom: '10px' }}>\r\n                <Button\r\n                    variant=\"success\"\r\n                    onClick={lyricsCallback}>\r\n                    <span className=\"text-light\">\r\n                        <i className=\"fas fa-plus-square\" />\r\n                        {` Add Lyrics`}\r\n                    </span>\r\n                </Button>\r\n            </div>\r\n            <div className=\"col-lg-2\" style={{ paddingBottom: '10px' }}>\r\n                <Button\r\n                    variant=\"success\"\r\n                    onClick={sheetsCallback}>\r\n                    <span className=\"text-light\">\r\n                        <i className=\"fas fa-plus-square\" />\r\n                        {` Add Sheet`}\r\n                    </span>\r\n                </Button>\r\n            </div>\r\n            <div style={{ paddingLeft: '550px' }} className=\"col\">\r\n                <InputText type=\"search\" placeholder=\"Search\" onInput={(e) => setGlobalFilter(e.target.value)} />\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst ManageSongSheets = ({ band, song }) => {\r\n    const history = useHistory();\r\n\r\n    const songSheetsFormated = ({ lyrics, sheets }) => ({\r\n        root: [\r\n            {\r\n                key: 0,\r\n                data: {\r\n                    type: 'Lyrics',\r\n                    content: lyrics\r\n                }\r\n            }\r\n        ].concat(sheets.map(\r\n            (sheet, index) => ({\r\n                key: index,\r\n                data: {\r\n                    type: sheet?.instrument,\r\n                    content: sheet?.content\r\n                }\r\n            })\r\n        ))\r\n    });\r\n    const lyricsCallback = () => {\r\n        history.push(`/bands/${band.id}/songs/${song.id}/editor/lyrics`);\r\n    }\r\n\r\n    return (\r\n        <TreeTable \r\n            className=\"animated faster fadeIn\"\r\n            value={songSheetsFormated(song)}\r\n            header={\r\n                <CustomHeader \r\n                    lyricsCallback={lyricsCallback}/>\r\n                }\r\n            >\r\n            <Column field=\"name\" header=\"Name\" expander />\r\n            <Column field=\"type\" header=\"Type\" />\r\n        </TreeTable>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    band: selectSelectedBand,\r\n    song: selectSelectedSong\r\n})\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(ManageSongSheets);","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {createStructuredSelector} from 'reselect';\r\nimport {Editor} from \"primereact/editor\";\r\nimport { selectSelectedBand } from '../../../redux/band/band.selector';\r\nimport { selectSelectedSong } from '../../../redux/song/song.selector';\r\n\r\n\r\n\r\nexport const EditorComponent = ({song, band}) => {\r\n    const [editorState, setEditorState] = useState(song.lyrics);\r\n    return (\r\n        <div>\r\n            <Editor value={editorState} onTextChange={(e)=> setEditorState(e.htmlValue)}/>\r\n            <button className=\"btn btn-outline-danger\" onClick={e => console.log(editorState)}>Log html value</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    band : selectSelectedBand,\r\n    song: selectSelectedSong\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(EditorComponent)\r\n","import React from 'react'\r\nimport { Switch } from 'react-router-dom';\r\nimport PrivateRoute from '../../../routing/PrivateRoute';\r\nimport ManageSongSheets from './manage-song-sheets';\r\nimport EditorComponent from './editor-component';\r\nconst SongSheetsRouter = () => {\r\n    return (\r\n        <Switch>\r\n            <PrivateRoute path=\"/bands/:id/songs/:songId/editor/sheet/:sheetName\" />\r\n            <PrivateRoute path=\"/bands/:id/songs/:songId/editor/sheet/new\" />\r\n            <PrivateRoute path=\"/bands/:id/songs/:songId/editor/lyrics\" component={EditorComponent} />\r\n            <PrivateRoute path=\"/bands/:id/songs/:songId\" component={ManageSongSheets} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default SongSheetsRouter;","import React from 'react'\r\nimport BandSongs from './band-songs';\r\nimport ManageSongSheets from '../song/manage-song-sheets';\r\nimport { Switch } from 'react-router-dom';\r\nimport PrivateRoute from '../../../routing/PrivateRoute';\r\nimport SongSheetsRouter from '../song/song-sheets-router';\r\n\r\nconst BandSongsRouter = () => {\r\n    return (\r\n        <Switch>\r\n            <PrivateRoute path=\"/bands/:id/songs/:songId\" component={SongSheetsRouter} />\r\n            <PrivateRoute path=\"/bands/:id/songs\" component={BandSongs}/>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default BandSongsRouter;","import React, { useState, useRef, useReducer } from 'react'\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport Button from 'react-bootstrap/Button';\r\nimport genreItems from '../genre-items';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport bandService from '../../../services/BandService';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectUser } from '../../../redux/auth/auth.selector';\r\nimport { selectBand, fetchBandsSuccess } from '../../../redux/band/band.actions';\r\nimport { selectSelectedBand, selectBands } from '../../../redux/band/band.selector';\r\nimport { Growl } from 'primereact/growl'\r\nimport selected from '../../multiselect-selected';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport environment from 'environment';\r\n\r\nconst baseUrl = environment.api;\r\n\r\nconst reducer = (state, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case 'update':\r\n            return {\r\n                action: 'update',\r\n                message: `Are you sure you want to update ${payload}`\r\n            }\r\n        case 'mark_active':\r\n            return {\r\n                action: 'markActive',\r\n                message: `You are about to mark ${payload} as active. Are you sure?`\r\n            }\r\n        case 'mark_inactive':\r\n            return {\r\n                action: 'markInactive',\r\n                message: `You are about to mark ${payload} as inactive. Are you sure?`\r\n            }\r\n        default:\r\n            throw new Error('wrong action type');\r\n    }\r\n}\r\n\r\nconst EditBand = ({ user, selectedBand, updateSelectedBand, updateBands, bands }) => {\r\n    const [genres, setGenres] = useState(selectedBand.genres.split(',').map(genre => genre.trim()));\r\n    const [imageUrl, setImageUrl] = useState(selectedBand.logo);\r\n    const [bandName, setBandName] = useState(selectedBand.name);\r\n    const [bandDescription, setBandDescription] = useState(selectedBand.description);\r\n    const [isBandActive, setIsBandActive] = useState(selectedBand.active === 'Active');\r\n    const [isConfirmDialogDisplaying, setIsConfirmDialogDisplaying] = useState(false);\r\n    const history = useHistory();\r\n    let growl = useRef(null);\r\n    let bandUpdated = useRef(null);\r\n    let bandUpdateError = useRef(null);\r\n    const [actionState, dispatch] = useReducer(reducer, { action: {}, message: '' });\r\n\r\n    const onUpload = (e) => {\r\n        growl.current.show({ severity: 'success', summary: 'Success', detail: 'File Uploaded' });\r\n        const response = JSON.parse(e.xhr.response);\r\n        setImageUrl(response.downloadUrl);\r\n    }\r\n\r\n    const handleMark = (e) => {\r\n        if (actionState.action === 'markActive') {\r\n            bandService.update(selectedBand.id, {active: true})\r\n                .then(() => {\r\n                    growl.current.show({ severity: 'success', summary: 'Success', detail: 'Band marked as active' });\r\n                    setIsBandActive(true)\r\n                    setIsConfirmDialogDisplaying(false);\r\n                    const updatedBand = { ...selectedBand, active: 'Active'};\r\n                    updateSelectedBand(updatedBand);\r\n                    return updatedBand;\r\n                })\r\n                .then((band) => {\r\n                    fetchBandsSuccess(bands.concat(band));\r\n                })\r\n                .catch((error) => {\r\n                    growl.current.show({ severity: 'error', summary: 'Error Message', detail: \"Couldn't update band\" });\r\n                    setIsConfirmDialogDisplaying(false);\r\n                });\r\n        }\r\n        if (actionState.action === 'markInactive') {\r\n            bandService.delete(selectedBand.id)\r\n                .then(() => {\r\n                    growl.current.show({ severity: 'success', summary: 'Success', detail: 'Band marked as inactive' });\r\n                    setIsBandActive(false);\r\n                    const updatedBand = { ...selectedBand, active: 'Inactive'};\r\n                    updateSelectedBand(updatedBand);\r\n                    setIsConfirmDialogDisplaying(false);\r\n                })\r\n                .then((band) => {\r\n                    fetchBandsSuccess(bands.concat(band));\r\n                })\r\n                .catch((error) => {\r\n                    growl.current.show({ severity: 'error', summary: 'Error Message', detail: \"Couldn't update band\" });\r\n                    setIsConfirmDialogDisplaying(false);\r\n                });\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const band = {\r\n            name: bandName,\r\n            description: bandDescription,\r\n            genres,\r\n            manager: user.id,\r\n            logo: imageUrl\r\n        };\r\n        bandService.update(selectedBand.id, band)\r\n            .then((band) => {\r\n                bandUpdated.current.show({ severity: 'success', summary: 'Success', detail: 'Band Updated' });\r\n                setIsConfirmDialogDisplaying(false);\r\n                const updatedBand = { ...band, genres: band.genres.join(', ')};\r\n                updateSelectedBand(updatedBand);\r\n                return updatedBand;\r\n            })\r\n            .then((band) => {\r\n                fetchBandsSuccess(bands.concat(band));\r\n            })\r\n            .catch((error) => {\r\n                bandUpdateError.current.show({ severity: 'error', summary: 'Error Message', detail: \"Couldn't update band\" });\r\n            });\r\n    }\r\n\r\n    const handleButtonClick = (e) => {\r\n        const { id } = e.target;\r\n        console.log(id);\r\n        if (id === 'edit-band-save') {\r\n            dispatch({ type: 'update', payload: bandName });\r\n            setIsConfirmDialogDisplaying(true);\r\n        }\r\n        if (id === 'edit-band-mark' && isBandActive) {\r\n            dispatch({ type: 'mark_inactive', payload: bandName });\r\n            setIsConfirmDialogDisplaying(true);\r\n        }\r\n        if (id === 'edit-band-mark' && !isBandActive) {\r\n            dispatch({ type: 'mark_active', payload: bandName });\r\n            setIsConfirmDialogDisplaying(true);\r\n        }\r\n    }\r\n\r\n    const renderModal = (\r\n        <Modal show={isConfirmDialogDisplaying} onHide={() => setIsConfirmDialogDisplaying(false)} centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Confirm changes</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {actionState.message}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <button className=\"btn btn-primary\" onClick={actionState.action === 'update' ? handleSubmit : handleMark}>\r\n                    Confirm\r\n                </button>\r\n                <button className=\"btn btn-secondary\" onClick={() => setIsConfirmDialogDisplaying(false)}>\r\n                    Close\r\n                </button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n\r\n \r\n\r\n    return (\r\n        <>\r\n            {renderModal}\r\n            <div className=\"animated faster fadeIn\">\r\n                <div className=\"spacer-sm\" />\r\n                <Growl ref={bandUpdateError} position=\"topright\"></Growl>\r\n                <Growl ref={bandUpdated} position=\"topright\"></Growl>\r\n                <Growl ref={growl} position=\"topright\"></Growl>\r\n                <form style={{ paddingLeft: '20px' }}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-5\">\r\n                            <div className=\"form-group\">\r\n                                <label className=\"h6\"><strong>Edit band logo</strong></label>\r\n                                <FileUpload name=\"data\"\r\n                                    url={`${baseUrl}/storage/upload`}\r\n                                    onUpload={onUpload}\r\n                                    multiple={false} accept=\"image/*\" maxFileSize={1000000} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <div className=\"form-group\">\r\n                                <label className=\"h6\" htmlFor=\"band-name\"><strong>Band name</strong></label>\r\n                                <input defaultValue={bandName} type=\"text\" className=\"form-control\" id=\"band-name\" onChange={(e) => setBandName(e.target.value)} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"h6\" htmlFor=\"band-description\"><strong>Band description</strong></label>\r\n                                <textarea className=\"form-control\" id=\"band-description\" rows=\"3\" onChange={(e) => setBandDescription(e.target.value)} defaultValue={bandDescription} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"row\">\r\n                                    <label className=\"h6 col\" htmlFor=\"band-genres\">\r\n                                        <strong>Band genres</strong>\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <MultiSelect\r\n                                            style={{ width: '70%', minWidth: '12em' }}\r\n                                            maxSelectedLabels={10}\r\n                                            placeholder=\"Select genres\"\r\n                                            optionLabel=\"label\"\r\n                                            optionValue=\"value\"\r\n                                            id=\"Band-genres\"\r\n                                            value={genres}\r\n                                            options={genreItems}\r\n                                            onChange={(e) => setGenres(e.value)}\r\n                                            selectedItemTemplate={selected}\r\n\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-8\" />\r\n                        <div className=\"col\" style={{ paddingLeft: '89px' }}>\r\n                            <Button id=\"edit-band-save\" style={{ width: '130px' }} variant=\"success\" type=\"button\" onClick={handleButtonClick}>Save</Button>{' '}\r\n                            <Button id=\"edit-band-mark\" style={{ width: '150px' }} variant=\"secondary\" type=\"button\" onClick={handleButtonClick}>{`Mark as ${isBandActive ? 'inactive' : 'active'}`}</Button>\r\n                        </div >\r\n\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    user: selectUser,\r\n    selectedBand: selectSelectedBand,\r\n    bands: selectBands\r\n});\r\n\r\nconst mapDispatchTopProps = dispatch => ({\r\n    updateSelectedBand: (band) => dispatch(selectBand(band)),\r\n    fetchBandsSuccess: (bands) => dispatch(fetchBandsSuccess(bands))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchTopProps)(EditBand);","import React from 'react'\r\nimport { useParams, Switch, Redirect, useHistory} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { selectSelectedBand } from '../../redux/band/band.selector';\r\nimport { selectBand } from '../../redux/band/band.actions';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport GenericBodyCard from '../../components/generic-body-card';\r\nimport BandTitle from '../../components/manage-bands/band-title';\r\nimport PrivateRoute from '../../routing/PrivateRoute';\r\nimport BandTopBar from '../../components/manage-bands/topbar/band-topbar';\r\nimport BandMembers from '../../components/manage-bands/band/band-members';\r\nimport BandEvents from '../../components/manage-bands/band/band-events';\r\nimport BandSongsRouter from '../../components/manage-bands/band/band-songs-router';\r\nimport EditBand from '../../components/manage-bands/band/edit-band';\r\n\r\nconst ViewBand = ({ selectedBand, selectBand }) => {\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    const location = useHistory();\r\n    \r\n    if (id !== selectedBand.id) return <Redirect to=\"/bands\"/>\r\n\r\n    return (\r\n        <div className=\"container-fluid\" style={{ padding: '20px' }}>\r\n            <BandTitle className=\"shadowed animated faster bounceInRight\" />\r\n            <div className=\"spacer-sm\" />\r\n            <GenericBodyCard className=\"container-fluid shadowed animated faster bounceInRight delayed\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <BandTopBar />\r\n                    </div>\r\n                </div>\r\n                <div className=\"spacer-mini\" />\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Switch>\r\n                            <PrivateRoute path=\"/bands/:id/members\" component={BandMembers} />\r\n                            <PrivateRoute path=\"/bands/:id/songs\" component={BandSongsRouter} />\r\n                            <PrivateRoute path=\"/bands/:id/events\" component={BandEvents} />\r\n                            <PrivateRoute path=\"/bands/:id/edit\" component={EditBand} />\r\n                            <Redirect from=\"/bands/:id\" to=\"/bands/:id/members\" />\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </GenericBodyCard>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    selectedBand: selectSelectedBand\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    selectBand: band => dispatch(selectBand(band))\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ViewBand);","import React, { useEffect } from 'react'\r\nimport { Switch, withRouter } from 'react-router-dom';\r\nimport PrivateRoute from '../../routing/PrivateRoute';\r\nimport BandsOverview from './bands-overview';\r\nimport ViewBand from './view-band';\r\nimport { connect } from 'react-redux';\r\nimport { fetchBandsSuccess, fetchBandsFailure } from '../../redux/band/band.actions';\r\nimport { selectBands } from '../../redux/band/band.selector';\r\nimport { selectUser } from '../../redux/auth/auth.selector';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport bandService from '../../services/BandService';\r\n\r\nconst ManageBandsPage = ({ fetchBandsFailure, fetchBandsSuccess, user }) => {\r\n    useEffect(() => {\r\n        bandService.getAll(user.id)\r\n            .then(bands => {\r\n                fetchBandsSuccess(\r\n                    bands.map(\r\n                        band => ({\r\n                            ...band,\r\n                            active: band.active ? 'Active' : 'Inactive',\r\n                            genres: band.genres.join(', ')\r\n                        })\r\n                    ));\r\n            })\r\n            .catch(error => fetchBandsFailure(error));\r\n    }, []);\r\n\r\n    return (\r\n        <Switch>\r\n            <PrivateRoute path=\"/bands/:id\" component={ViewBand} />\r\n            <PrivateRoute component={BandsOverview} />\r\n        </Switch>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    bands: selectBands,\r\n    user: selectUser\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchBandsSuccess: bands => dispatch(fetchBandsSuccess(bands)),\r\n    fetchBandsFailure: error => dispatch(fetchBandsFailure(error))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ManageBandsPage);","import React from 'react'\r\n\r\nconst SetlistsBody = () => {\r\n    return(\r\n        <>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default SetlistsBody;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PageTitle from '../../components/page-title';\r\nimport GenericBodyCard from '../../components/generic-body-card';\r\nimport SetlistsBody from '../../components/setlists/setlist-body';\r\nconst SetlistsPage = () => {\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid\" style={{ padding: '20px' }}>\r\n            <PageTitle className=\"shadowed animated faster bounceInRight\" title=\"Your Setlists\">\r\n                Here you can organize, create, delete, edit and search your setlists were you are live experience designer\r\n            </PageTitle>\r\n            <div className=\"spacer-sm\" />\r\n            <GenericBodyCard\r\n                title=\"Setlists\"\r\n                className=\"shadowed animated faster bounceInRight delayed\"\r\n                searchBar={\r\n                    <form style={{ paddingLeft: '80px' }} className=\"form-inline my-2 my-lg-0\" onSubmit={handleSearch}>\r\n                        <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-secondary my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                    </form>\r\n                }>\r\n                <SetlistsBody />\r\n            </GenericBodyCard>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default withRouter(SetlistsPage);","import React, { useRef, useEffect } from 'react'\r\nimport { Switch, Route, withRouter, Redirect } from 'react-router-dom';\r\nimport Sidebar from '../components/sidebar/sidebar';\r\nimport Card from 'react-bootstrap/Card'\r\nimport ManageBandsPage from './manage-bands/manage-bands-page';\r\nimport SetlistsPage from './setlists/setlists-page';\r\nimport PrivateRoute from '../routing/PrivateRoute';\r\n\r\nconst HomePage = () => {\r\n    \r\n    return (\r\n        <div className=\"bg-light container-fluid fill-height\">\r\n            <div className=\"row\">\r\n                <Card className=\"shadowed fill-height col-2 \">\r\n                    <Sidebar />\r\n                </Card>\r\n                <div className=\"col-10\">\r\n                    <Switch>\r\n                        <PrivateRoute path='/bands' component={ManageBandsPage} />\r\n                        <PrivateRoute path='/setlists' component={SetlistsPage} />\r\n                        <PrivateRoute path='/profile' component={() => <>profile</>} />\r\n                        <PrivateRoute path='/dashboard' component={() => <>dashboard</>} />\r\n                        <Redirect from=\"/\" to=\"/dashboard\" />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React, { useState } from 'react';\r\nimport { Redirect, BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport PrivateRoute from \"./routing/PrivateRoute\";\r\nimport { store, persistor } from './redux/store';\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport { Provider } from \"react-redux\";\r\nimport RegisterPage from './pages/auth/register-page';\r\nimport LoginPage from './pages/auth/login-page';\r\nimport Cookies from 'js-cookie';\r\nimport setAuthToken from './utils/SetAuthToken';\r\nimport HomePage from './pages/home-page';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './theme/styles.css';\r\nimport './theme/animate.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css'\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\n\r\nconst componentToTest = <><RegisterPage className=\"full-page\" /></>;\r\n\r\nfunction App() {\r\n  const [jwtCookie,] = useState(Cookies.get('jwt'));\r\n\r\n  if (jwtCookie) {\r\n    const jwt = JSON.parse(jwtCookie);\r\n    setAuthToken(jwt.token);\r\n  }\r\n\r\n  const renderRoutes = () => {\r\n    return jwtCookie ?\r\n      (\r\n        <>\r\n          <Switch>\r\n            <PrivateRoute path=\"/\" component={HomePage} />\r\n          </Switch>\r\n        </>\r\n      ) :\r\n      (\r\n        <>\r\n          <Switch>\r\n            <Route exact path=\"/\" to=\"/login\" component={LoginPage} />\r\n            <Route exact path=\"/test\" render={() => componentToTest} />\r\n            <Route exact path=\"/login\" component={LoginPage} />\r\n            <Route exact path=\"/register\" component={RegisterPage} />\r\n            <Redirect to=\"/\" />\r\n          </Switch>\r\n        </>\r\n      )\r\n  }\r\n  console.log(jwtCookie);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <Router>\r\n          {renderRoutes()}\r\n        </Router>\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/only_logo.138c63d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/register_bg.abe673d5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/google_logo.f6ce5696.svg\";","module.exports = __webpack_public_path__ + \"static/media/fb_logo.dce3111d.svg\";","module.exports = __webpack_public_path__ + \"static/media/login_bg.72512d89.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dashboard.7217f10c.svg\";"],"sourceRoot":""}